service: vehicle-api
frameworkVersion: '2'

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  #profile: sls-vehicle-api-admin
  lambdaHashingVersion: '20201221'
  environment:
    DYNAMODB_TABLE: ${self:service} #-${sls:stage}
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            #- dynamodb:Query
            #- dynamodb:Scan
            #- dynamodb:GetItem
            - dynamodb:PutItem
            #- dynamodb:UpdateItem
            #- dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/vehicle-api"

functions:
  create:
    handler: vehicles/add.add
    events:
      - httpApi:
          path: /vehicles
          method: post

  # get:
  #   handler: vehicles/get.get
  #   events:
  #     - httpApi:
  #         path: /vehicles/{id}
  #         method: get

resources:
  Resources:
    VehiclesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: vehicle-api #${self:provider.environment.DYNAMODB_TABLE}
